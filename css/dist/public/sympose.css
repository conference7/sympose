.sympose-sidebars .sympose-widget .sym-list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  text-align: center; }
  .sympose-sidebars .sympose-widget .sym-list .sym {
    margin-right: 20px; }

/*
Max width before this PARTICULAR table gets nasty
This query will take effect for any screen smaller than 760px
and also iPads specifically.
*/
@media only screen and (max-width: 760px), (min-device-width: 768px) and (max-device-width: 1024px) {
  table.sympose-schedule {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    /* Force table to not be like tables anymore */
    /* Hide table headers (but not display: none;, for accessibility) */ }
    table.sympose-schedule thead, table.sympose-schedule tbody, table.sympose-schedule th, table.sympose-schedule td, table.sympose-schedule tr {
      display: block; }
    table.sympose-schedule thead tr {
      position: absolute;
      top: -9999px;
      left: -9999px; }
    table.sympose-schedule tr {
      border: 1px solid #ccc;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
          -ms-flex-direction: row;
              flex-direction: row;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; }
    table.sympose-schedule td {
      /* Behave  like a "row" */
      border: none;
      border-bottom: 1px solid #eee;
      position: relative;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-align: center;
          -ms-flex-align: center;
              align-items: center; } }
    @media only screen and (max-width: 760px) and (max-width: 480px), only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (max-width: 480px) {
      table.sympose-schedule td {
        text-align: center; }
        table.sympose-schedule td > * {
          width: 100%; } }

@media only screen and (max-width: 760px), (min-device-width: 768px) and (max-device-width: 1024px) {
      table.sympose-schedule td.edit-link {
        display: none; }
      table.sympose-schedule td.time {
        width: 35%; } }
      @media only screen and (max-width: 760px) and (max-width: 480px), only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (max-width: 480px) {
        table.sympose-schedule td.time {
          width: 100%; } }

@media only screen and (max-width: 760px), (min-device-width: 768px) and (max-device-width: 1024px) {
      table.sympose-schedule td.title {
        width: 65%; } }
      @media only screen and (max-width: 760px) and (max-width: 480px), only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (max-width: 480px) {
        table.sympose-schedule td.title {
          width: 100%; } }

@media only screen and (max-width: 760px), (min-device-width: 768px) and (max-device-width: 1024px) {
      table.sympose-schedule td.people, table.sympose-schedule td.organisations {
        width: 30%; } }
      @media only screen and (max-width: 760px) and (max-width: 480px), only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (max-width: 480px) {
        table.sympose-schedule td.people, table.sympose-schedule td.organisations {
          width: 50%; } }

@media only screen and (max-width: 760px), (min-device-width: 768px) and (max-device-width: 1024px) {
      table.sympose-schedule td.sympose-read-more {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-align: center;
            -ms-flex-align: center;
                align-items: center;
        -webkit-box-flex: 1;
            -ms-flex: 1;
                flex: 1;
        -webkit-box-pack: end;
            -ms-flex-pack: end;
                justify-content: flex-end;
        margin-left: auto; } }
      @media only screen and (max-width: 760px) and (max-width: 480px), only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (max-width: 480px) {
        table.sympose-schedule td.sympose-read-more {
          width: 100%;
          -webkit-box-pack: center;
              -ms-flex-pack: center;
                  justify-content: center; } }

@media only screen and (max-width: 760px), (min-device-width: 768px) and (max-device-width: 1024px) {
    table.sympose-schedule tr.title-column th {
      width: 100%; } }

table.sympose-schedule {
  width: 100%; }
  table.sympose-schedule tr.session-child td {
    line-height: 1; }
    table.sympose-schedule tr.session-child td a {
      padding-top: 0;
      padding-bottom: 0; }
    table.sympose-schedule tr.session-child td span.sym img {
      width: 75%; }
  table.sympose-schedule tr.running td a {
    color: red; }
  table.sympose-schedule tr th {
    background: rgba(0, 0, 0, 0.05);
    padding: 5px; }
    table.sympose-schedule tr th h3 {
      margin: 0; }
  table.sympose-schedule tr td {
    vertical-align: middle;
    border-bottom: 1px solid #eee; }
    table.sympose-schedule tr td .inner {
      vertical-align: middle; }
    table.sympose-schedule tr td a {
      display: block;
      padding: 5px;
      text-decoration: none; }
    table.sympose-schedule tr td .sym-list {
      overflow: hidden; }
    table.sympose-schedule tr td span.sym {
      display: inline-block; }
    table.sympose-schedule tr td span.sym.organisation img {
      vertical-align: middle; }
  table.sympose-schedule tr td.sympose-read-more a {
    text-decoration: underline; }
  table.sympose-schedule tr:hover td {
    background: rgba(0, 0, 0, 0.075);
    color: white; }

.sym-list {
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex; }
  .sym-list .list-inner {
    width: 100%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: distribute;
        justify-content: space-around;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap; }
    .sym-list .list-inner span.sym {
      vertical-align: top; }
      .sym-list .list-inner span.sym a {
        text-decoration: none; }
  .sym-list .sym.person.no-image .image {
    display: none; }
  .sym-list .sym.session.no-image .image {
    display: none; }
  .sym-list .sym.organisation.no-image .image {
    display: none; }

.sym-list.organisation .list-inner {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center; }
  .sym-list.organisation .list-inner span.sym {
    max-width: 150px;
    margin: 20px; }

.sym-list.person .list-inner span.sym {
  max-width: 150px;
  margin-right: 15px; }

span.sym {
  display: inline-block;
  text-align: center; }
  span.sym a {
    display: block;
    text-decoration: none; }
    span.sym a .image {
      margin-bottom: 5px;
      min-height: 100px;
      width: 100%;
      background-size: cover;
      background-position: center;
      background-repeat: no-repeat; }
    span.sym a span {
      display: block; }
    span.sym a span.desc {
      display: inline-block; }
  span.sym .inner-content {
    padding: 10px; }
  span.sym img {
    margin: 0 auto;
    display: inline-block; }

span.sym.organisation .image {
  background-size: contain; }

span.sym.person a .image {
  background-size: cover;
  min-height: 200px; }

.sympose-session-items {
  margin-bottom: 40px; }

.widget .sym-list {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column; }
  .widget .sym-list span.sym {
    margin-bottom: 20px; }

.sym-list.shortcode span.sym {
  margin-bottom: 20px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
